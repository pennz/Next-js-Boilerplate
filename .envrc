# Enable Nix flakes support
use flake

# Load environment variables from .env.local if it exists
dotenv_if_exists .env.local

# Add node_modules/.bin to PATH for npm scripts
PATH_add node_modules/.bin

# Add custom development scripts to PATH
PATH_add ./.nix/bin

# Set up development environment
export NODE_ENV=development

# PostgreSQL configuration
export PGDATA="$PWD/.postgres"
export PGHOST="localhost"
export PGPORT="5432"
export PGDATABASE="development"
export PGUSER="development"

# Playwright configuration
export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

# Next.js configuration
export TURBOPACK=1

# macOS-specific optimizations
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
export FORCE_COLOR=1
export TERM=xterm-256color

# Node.js memory optimization for macOS
export NODE_OPTIONS="--max-old-space-size=4096"

# Increase file descriptor limit (common issue on macOS)
ulimit -n 65536 2>/dev/null || true

# Development helpers
export DEV_SETUP_COMPLETE="${PWD}/.dev-setup-complete"

# macOS notification function
notify_mac() {
    if command -v terminal-notifier &> /dev/null; then
        terminal-notifier -title "Dev Environment" -message "$1"
    fi
}

# Auto-setup on first entry
if [[ ! -f "$DEV_SETUP_COMPLETE" && -f "package.json" ]]; then
    echo "🍎 macOS development environment detected..."
    echo "🔧 Run 'dev-setup' to initialize your development environment"
    notify_mac "Development environment ready to setup!"
fi